@model IEnumerable<Product>

@foreach (var product in Model)
{
    <div class="col-md-4">
        <div class="card me-2  border border-2 rounded rounded-1">
            <div class="card1">
                <img src="@product.ProductImages.Select(pi => pi.ImgUrl).FirstOrDefault()" class="p-3 card-img w-100" alt="...">
            </div>
            <div class="card-body bg-primary bg-opacity-10">
                <h5 style="height:65px;" class="card-title">@product.Name</h5>
                    @if (product.OnSale)
                    {
                        var price = @product.Price - Math.Round(product.Price * product.Offer.DiscountPercentage);
                        <div class="price-discount d-flex">
                            <del>@product.Price</del>
                        <p class="fw-semibold fs-5 mx-3 text-danger">@price EGP</p>
                    </div>
                    }
                    else
                    {
                        <p class="fw-semibold fs-5 text-success">@product.Price EGP</p>
                    }

                @{
                    decimal rating = product.Ratings.Count() > 0 ? product.Ratings.Average(r => r.Value) : 5;
                }
                <div class="pb-3">
                    @for (int i = 0; i < Math.Round(rating); i++)
                    {
                        <i class="fas fa-star" style="color:gold"></i>
                    }
                    @for (int i = (int)Math.Round(rating); i < 5; i++)
                    {
                        <i class="fas fa-star" style="color:darkgray"></i>
                    }
                </div>
                <button data-product-id="@product.Id" class="btn btn-success add-cart">Add To Cart</button>
                <a asp-route-productId="@product.Id" asp-controller="Product" asp-action="Details" class="btn btn-secondary ">Details</a>
            </div>
        </div>
    </div>
}