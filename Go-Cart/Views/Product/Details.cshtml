@model ProductDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
}
@if (TempData["DuplicateProduct"] != null && (bool)TempData["DuplicateProduct"])
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Product is already added to the cart.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<section class="details">
    <div class="container">
        <div class="row ">
            <div class="col-md-4">
                <div class=" d-flex flex-wrap imgDetails">
                    <img id="imgItem" src="@Model.ImgUrl" class="" alt="">
                    @*                    <img src="../Assets/Image/product/product-38.jpeg" class=" p-3 item" alt="">
                    <img src="../Assets/Image/product/product-37.jpeg" class=" p-3 item" alt="">
                    <img src="../Assets/Image/product/product-36.jpeg" class=" p-3 item" alt="">
                    <img src="../Assets/Image/product/product-39.jpeg" class=" p-3 item" alt="">
                    *@
                </div>
            </div>

            <div class="col-md-6  p-1 mt-5 ">
                <div class="">
                    <div class="d-flex justify-content-between">
                        <p class="text-secondary fs-4">@Model.Category</p>
                        <h5 class="me-2 text-success">@Model.Price$</h5>
                    </div>

                    <div class="d-flex justify-content-between mb-1">
                        <span class="fw-bolder fs-4">@Model.Name</span>
                        <div id="rating-container">
                            @Html.Partial("_RatingPartial", Model.Rating)
                        </div>
                    </div>

                    <div class="d-flex">
                        <span class="fw-semibold">Available Colors: </span>
                        <div class="mx-2">
                            @for (int i = 0; i < Model.AvailableColors.Count; i++)
                            {
                                <i class="fa-solid fa-circle text-@(Model.AvailableColors.ElementAt(i))"></i>
                            }
                        </div>
                    </div>

                    <div class="d-flex">
                        <span class="fw-semibold">Available Sizes: </span>
                        <p class="mx-2">

                        @foreach (var size in Model.AvailableSizes)
                        {
                                @(size == Model.AvailableSizes.Last() ? size : size + ", ")
                        }
                        </p>
                    </div>

                    <small>@Model.Description</small>
                    <div class="text-center">
                        <a asp-route-productId="@Model.Id" asp-controller="Cart" asp-action="AddToCart" class="btn py-2 detailsBtn text-white border-0 w-50 px-5 rounded-0 my-4">
                            ADD TO CART +
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container">
    @{
        var user = await _userManager.GetUserAsync(User);
    }
    <div class="d-flex">
        <h3 class="mx-2">Rate: </h3>
        <div class="star-rating">
            @for (int i = 1; i <= 5; i++)
            {
                <span class="star" data-value="@i">&#9734;</span>
            }
            <input type="hidden" name="Rating" id="rating-value" value="" />
        </div>
    </div>
</section>


<section class="my-5">
    <input type="hidden" name="__RequestVerificationToken" value="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
    <input name="review" maxlength="200" id="coment" class="form-control w-75 mx-auto text-dark py-3" placeholder="Write a customer review" />
    <button class="addreview-btn d-none"></button>
    <div class="comment mx-auto w-75 mt-5" id="comments-container">
        @Html.Partial("_CommentsPartial", Model.ProductReviews)
    </div>
</section>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(".star-rating .star").click(function () {
        var value = $(this).data("value");
        $("#rating-value").val(value);
        $(".star-rating .star").removeClass("checked");
        $(this).prevAll().addBack().addClass("checked");
    });
</script>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#coment').keypress(function (e) {
                if (e.keyCode == 13) { 
                    e.preventDefault();
                    submitReviewForm();
                }
            });


            $.ajax({
                url: '@Url.Action("GetUserRating", "Rating")',
                type: 'Get',
                data: {
                    productId: '@Model.Id',
                },
                success: function (result) {
                    var requiredStars = result;
                    console.log(requiredStars);
                    $(".star-rating .star").slice(0, requiredStars).addClass("checked");
                },
                error: function () {
                }
            });

            function refreshRating() {
                var productId = '@Model.Id';
                $.ajax({
                    url: '@Url.Action("GetRating", "Rating")',
                    type: 'GET',
                    data: {
                        productId: productId
                    },
                    success: function (result) {
                        $('#rating-container').html(result); // Update the comments section
                    },
                    error: function () {
                    }
                });
            }

            $('.star-rating .star').click(function () {
                var value = $(this).data('value');
                var productId = '@Model.Id';
                $.ajax({
                    url: '@Url.Action("Rate", "Rating")',
                    type: 'POST',
                    data: {
                        value: value,
                        productId: productId,
                    },
                    success: function () {
                        refreshRating();
                    },
                    error: function () {
                    }
                });
            });

            function submitReviewForm() {
                var review = $('#coment').val();
                var productId = '@Model.Id';
                $.ajax({
                    url: '@Url.Action("AddReview", "Product")',
                    type: 'POST',
                    data: {
                        review: review,
                        productId: productId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        refreshComments(); 
                        $('#coment').val('');
                    },
                    error: function () {
                    }
                });
            }

            function refreshComments() {
                var productId = '@Model.Id';
                $.ajax({
                    url: '@Url.Action("GetComments", "Product")',
                    type: 'GET',
                    data: {
                        productId: productId
                    },
                    success: function (result) {
                        $('#comments-container').html(result); // Update the comments section
                    },
                    error: function () {
                    }
                });
            }
        });
    </script>
}