@model ProductDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
}

<section class="details">
    <input class="d-none" id="product-id-details" value="@Model.Id" />
    <div class="container">
        <div class="row ">
            <div class="col-md-4">
                <div class=" d-flex flex-wrap imgDetails">
                    <img id="imgItem" src="@Model.ProductImages.FirstOrDefault()" class="p-1" alt="">
                    @foreach (var img in Model.ProductImages)
                    {
                        <img src="@img" class=" p-1 item" alt="">
                    }
                </div>
            </div>
            <div class="col-md-6  p-1 mt-5 ">
                <div class="">
                    <div class="d-flex justify-content-between">
                        <p class="text-secondary fs-4">@Model.Category</p>
                        @if (Model.PriceAfterDiscount.HasValue)
                        {
                            <div class="price-discount mt-2">
                                <h5 class="text-danger fw-bold">@Model.PriceAfterDiscount EGP</h5>
                                <del>@Model.Price EGP</del>
                            </div>
                        }
                        else
                        {
                            <h5 class="mt-2 text-success">@Model.Price EGP</h5>
                        }

                    </div>

                    <div class="d-flex justify-content-between mb-1">
                        <span class="fw-bolder fs-4">@Model.Name</span>
                        <div class="d-flex mt-2">
                            <div id="rating-container">
                                @Html.Partial("_RatingPartial", Model.Rating)
                            </div>
                            <p class="ms-1">(@Model.NumberOfRatings)</p>
                        </div>
                    </div>
                    <div class="mb-3">@Model.Description</div>
                    <div class="d-flex justify-content-between">
                        <div>
                            @if (Model.AvailableColors.Any())
                            {
                                <div class="d-flex">
                                    <span class="fw-semibold mb-1 me-2">Available Colors: </span>
                                    <div class=" bg-primary bg-opacity-10">
                                        <div class="mx-2">
                                            @for (int i = 0; i < Model.AvailableColors.Count; i++)
                                            {
                                                <i class="fa-solid fa-circle text-@(Model.AvailableColors.ElementAt(i))"></i>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.AvailableSizes.Any())
                            {

                                <div class="d-flex justify-content-between">
                                    <span class="fw-semibold">Available Sizes: </span>
                                    <p class="mx-2">
                                        @foreach (var size in Model.AvailableSizes)
                                        {
                                            @(size == Model.AvailableSizes.Last() ? size : size + ", ")
                                        }
                                    </p>
                                </div>
                            }
                        </div>
                        @if (_signInManager.IsSignedIn(User))
                        {
                            <ul class="product-action"><li class=" addToWL" data-product-id="@Model.Id"><i class="far fa-heart"></i></li></ul>
                        }
                    </div>


                    @if (Model.NumberOfItemsInStock == 0)
                    {
                        <small class="fs-5 text-danger my-2">Out Of Stock</small>
                    }
                    else if (Model.NumberOfItemsInStock < 11)
                    {
                        <small class="fs-5 text-danger my-2">Only @(Model.NumberOfItemsInStock) Items In Stock</small>
                    }
                    else
                    {
                        <small class="fs-5 text-success my-2">In Stock</small>
                    }
                    @{
                        Cart cart = HttpContextAccessor.HttpContext.Session.Get<Cart>("_cart");
                    }
                    <div class="text-center">
                        <button data-product-id="@Model.Id" class="add-cart py-2 detailsBtn text-white border-0 w-50 px-5 rounded-0 my-4">
                            @if (cart != null)
                            {
                                @(cart.Products.Any(p => p.Id == Model.Id) ? "Added To Cart" : "ADD TO CART +")
                            }
                            else
                            {
                                <span>ADD TO CART +</span>
                            }
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container">
    @{
        var user = await _userManager.GetUserAsync(User);
    }

    <div class="d-flex align-items-center">
        <h2 class="mx-2 pt-3 font-monospace">Rate: </h2>
        <div class="star-rating ">
            @for (int i = 1; i <= 5; i++)
            {
                <span class="star" data-value="@i">&#9734;</span>
            }
            <input type="hidden" name="Rating" id="rating-value" value="" />
        </div>
    </div>
</section>


<section class="pt-5 container position-relative ">
    <input type="hidden" name="__RequestVerificationToken" value="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
    <input name="review" maxlength="200" id="coment" class=" form-control text-dark py-3" placeholder="Write a customer review" />
    <button class="position-absolute px-2 rounded-2 bg-Go-color py-2 addreview-btn"> Send</button>
    <div class="comment mt-5" id="comments-container">
        @Html.Partial("_CommentsPartial", Model.ProductReviews)
    </div>
</section>
